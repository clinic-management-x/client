name: CICD pipeline for clinic frontend

env:
  SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
  NEXT_PUBLIC_AC_KEY: ${{ secrets.NEXT_PUBLIC_AC_KEY }}
  NEXT_PUBLIC_API_KEY: ${{ secrets.NEXT_PUBLIC_API_KEY }}

  SSH_HOST: ${{ vars.SSH_HOST }}
  SSH_USERNAME: ${{ vars.SSH_USERNAME }}
  IMAGE_NAME: ${{vars.DOCKER_IMAGE_NAME}}
  NEXT_PUBLIC_API_BASE_URL: ${{ vars.NEXT_PUBLIC_API_BASE_URL }}
  NEXT_PUBLIC_URL: ${{ vars.NEXT_PUBLIC_URL }}
  ENABLE_SSL: ${{ vars.ENABLE_SSL }}

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Building app
    runs-on: ubuntu-latest

    steps:
      - name: Checkout node
        uses: actions/checkout@v4

      - name: Login to dockerhub
        run: echo $DOCKERHUB_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: $IMAGE_NAME:latest
          build-args: |
            NEXT_PUBLIC_API_BASE_URL=$NEXT_PUBLIC_API_BASE_URL
            NEXT_PUBLIC_URL=$NEXT_PUBLIC_URL
            NEXT_PUBLIC_API_KEY=$NEXT_PUBLIC_API_KEY
            NEXT_PUBLIC_AC_KEY=$NEXT_PUBLIC_AC_KEY

  deploy:
    name: Deploying app
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout node
        uses: actions/checkout@v4

      - name: Create SSH key
        run: |
          echo "$SSH_PRIVATE_KEY" > private.key
          chmod 600 private.key
          eval `ssh-agent -s`
          ssh-add private.key
          mkdir -p ~/.ssh
          touch ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts

      - name: Install ansible
        run: |
          sudo apt update
          sudo apt install -y ansible

      - name: Create ansible inventory
        run: |
          echo "server ansible_host=$SSH_HOST ansible_user=$SSH_USERNAME ansible_ssh_private_key_file=private.key" >> inventory

      - name: Install Ansible roles
        run: |
          ansible-galaxy install geerlingguy.swap

      - name: Run ansible playbook
        run: |
          ansible-playbook -i inventory \
            --extra-vars "image_name=$IMAGE_NAME" \
            --extra-vars "domain_name=$DOMAIN_NAME" \
            --extra-vars "dockerhub_username=$DOCKERHUB_USERNAME" \
            --extra-vars "dockerhub_token=$DOCKERHUB_TOKEN" \
            --extra-vars "enable_ssl=$ENABLE_SSL" \
            --extra-vars "next_public_api_base_url=$NEXT_PUBLIC_API_BASE_URL" \
            --extra-vars "next_public_url=$NEXT_PUBLIC_URL" \
            --extra-vars "next_public_ac_key=$NEXT_PUBLIC_AC_KEY" \
            --extra-vars "next_public_api_key=$NEXT_PUBLIC_API_KEY" \
            devops/playbook.yml
